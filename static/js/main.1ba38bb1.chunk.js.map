{"version":3,"sources":["header.tsx","projects.tsx","err.tsx","getHeadElems.tsx","project.tsx","about.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","Nav","Item","exact","to","React","Component","Projects","projects","i","projectElems","length","element","push","Col","key","id","md","lg","src","images","alt","name","Row","Err","props","xs","span","offset","msg","getHeadElems","tabTitle","title","url","desc","image","content","undefined","property","Project","projectId","useParams","projectElem","filter","elem","slides","Carousel","Helmet","window","location","href","rawDescription","dangerouslySetInnerHTML","__html","description","About","App","basename","Container","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"g7HAMqBA,E,uKAEnB,MAAO,CACN,yBAAKC,UAAU,uBACf,yBAAKA,UAAU,2BACf,yBAAKA,UAAU,UACd,wCAEA,kBAACC,EAAA,EAAD,CACCD,UAAU,0BAEV,kBAACC,EAAA,EAAIC,KAAL,KACC,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIJ,UAAU,YAAhC,SAED,kBAACC,EAAA,EAAIC,KAAL,KACC,kBAAC,IAAD,CAASE,GAAG,SAASJ,UAAU,YAA/B,YAIH,yBAAKA,UAAU,cACd,yBAAKA,UAAU,sBAEhB,yBAAKA,UAAU,cACd,yBAAKA,UAAU,2B,GAvBiBK,IAAMC,W,wBCA3B,SAASC,IAGvB,IAFA,IAAIC,EAAiB,GAEZC,EAAI,EAAGA,EAAIC,IAAsBC,OAAQF,IAAK,CACtD,IAAMG,EAAUF,IAAsBD,GACtCD,EAASK,KACT,kBAACC,EAAA,EAAD,CAAKC,IAAKH,EAAQI,GAAIC,GAAI,EAAGC,GAAI,EAAGlB,UAAU,QAC7C,yBAAKA,UAAU,aACd,kBAAC,IAAD,CAAMI,GAAI,YAAcQ,EAAQI,IAC/B,yBAAKhB,UAAU,+BAA+BmB,IAAK,OAASP,EAAQQ,OAAO,GAAIC,IAAK,iBAAmBT,EAAQU,OAC/G,uBAAGtB,UAAU,yBAAyBY,EAAQU,UAOlD,OACC,kBAACC,EAAA,EAAD,KACEf,G,mCCrBW,SAASgB,EAAIC,GAC3B,OACC,kBAACF,EAAA,EAAD,KACC,kBAACT,EAAA,EAAD,CAAKY,GAAI,GAAIT,GAAI,CAACU,KAAM,EAAGC,OAAQ,IAClC,wBAAI5B,UAAU,gCAAgCyB,EAAMI,OCNzC,SAASC,EAAaC,EAAkBC,EAAeC,EAAaC,EAAeC,GACjG,MAAO,CACN,+BAAqB,KAAbJ,EAAkB,WAAlB,UAAkCA,EAAlC,gBACR,0BAAMT,KAAK,QAAQc,QAASJ,IAC5B,0BAAMV,KAAK,cAAcc,aAAkBC,IAATH,EAAqB,GAAKA,IAE5D,0BAAMI,SAAS,SAASF,QAASH,IACjC,0BAAMK,SAAS,WAAWF,QAASJ,IACnC,0BAAMM,SAAS,iBAAiBF,aAAkBC,IAATH,EAAqB,GAAKA,IACnE,0BAAMI,SAAS,WAAWF,aAAmBC,IAAVF,EAAsB,GAAKA,IAE9D,0BAAMG,SAAS,eAAeF,QAAQ,wBACtC,0BAAME,SAAS,cAAcF,QAASH,IACtC,0BAAMK,SAAS,gBAAgBF,QAASJ,IACxC,0BAAMM,SAAS,sBAAsBF,aAAkBC,IAATH,EAAqB,GAAKA,IACxE,0BAAMI,SAAS,gBAAgBF,aAAmBC,IAAVF,EAAsB,GAAKA,KCLtD,SAASI,IAAW,IAC7BC,EAAaC,cAAbD,UACDE,EAAchC,IAAsBiC,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,KAAOwB,KAAW,GAE9E,QAAoBH,IAAhBK,EACH,OAAO,kBAAClB,EAAD,CAAKK,IAAI,oBAIjB,IADA,IAAIgB,EAAS,GACJpC,EAAI,EAAGA,EAAIiC,EAAYtB,OAAOT,OAAQF,IAAK,CACnD,IAAMG,EAAU8B,EAAYtB,OAAOX,GACnCoC,EAAOhC,KACN,kBAACiC,EAAA,EAAS5C,KAAV,KACC,yBAAKF,UAAU,gBAAgBmB,IAAG,eAAUP,GAAWS,IAAG,gBAAWZ,EAAE,EAAb,gBAAsBiC,EAAYpB,UAK/F,OACC,kBAACC,EAAA,EAAD,KACC,kBAACwB,EAAA,EAAD,KACEjB,EAAaY,EAAYpB,KAAM,qBAAuB0B,OAAOC,SAASC,KAAMR,EAAYS,eAAgBT,EAAYtB,OAAO,KAE7H,kBAACN,EAAA,EAAD,CAAKY,GAAI,GAAIT,GAAI,CAACU,KAAM,GAAIC,OAAQ,IACnC,kBAACkB,EAAA,EAAD,KACED,GAEF,yBAAK7C,UAAU,gCAAgC0C,EAAYpB,MAC3D,yBAAKtB,UAAU,cAAcoD,wBAAyB,CAACC,OAAQX,EAAYY,iBClChE,SAASC,IACvB,OACC,kBAAChC,EAAA,EAAD,KACC,kBAACwB,EAAA,EAAD,KACEjB,EAAa,QAAS,iBAAkBkB,OAAOC,SAASC,OAE1D,kBAACpC,EAAA,EAAD,CAAKY,GAAI,GAAIT,GAAI,CAACU,KAAM,EAAGC,OAAQ,IAClC,yBAAK5B,UAAU,aACd,wBAAIA,UAAU,oBAAd,YACA,0EAC6C,6BAD7C,+LAG2F,6BAH3F,gDAMA,wBAAIA,UAAU,oBAAd,gBACA,2BACC,0BAAMA,UAAU,oBAAhB,aADD,gBACiE,6BAChE,0BAAMA,UAAU,oBAAhB,aAAmD,uBAAGkD,KAAK,gCAAR,aAAoD,6BACvG,0BAAMlD,UAAU,oBAAhB,YAAkD,uBAAGkD,KAAK,kCAAR,YAAqD,6BACvG,0BAAMlD,UAAU,oBAAhB,aAAmD,uBAAGkD,KAAK,+BAAR,YAAkD,6BACrG,0BAAMlD,UAAU,oBAAhB,kCALD,yBAOA,wBAAIA,UAAU,oBAAd,SACA,qDACwB,uBAAGkD,KAAK,uBAAR,UADxB,mCACgG,uBAAGA,KAAK,+BAAR,QADhG,kBAC6J,6BAD7J,4C,ICcUM,E,uKA3Bb,MAAO,CACN,kBAAC,IAAD,CAAYC,SAAS,KACpB,kBAAC,EAAD,MACC,kBAACC,EAAA,EAAD,KACC,kBAACX,EAAA,EAAD,KACEjB,EAAa,GAAI,qBAAuBkB,OAAOC,SAASC,OAE1D,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOS,KAAK,UACX,kBAACJ,EAAD,OAED,kBAAC,IAAD,CAAOpD,OAAK,EAACwD,KAAK,KACjB,kBAACpD,EAAD,OAED,kBAAC,IAAD,CAAOoD,KAAK,uBACX,kBAACpB,EAAD,OAED,kBAAC,IAAD,CAAOoB,KAAK,KACX,kBAACnC,EAAD,CAAKK,IAAI,6B,GApBCxB,IAAMC,WCHJsD,QACW,cAA7BZ,OAAOC,SAASY,UAEe,UAA7Bb,OAAOC,SAASY,UAEhBb,OAAOC,SAASY,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1ba38bb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport {\r\n\tNavLink\r\n} from 'react-router-dom';\r\n\r\nexport default class Header extends React.Component {\r\n\trender() {\r\n\t\treturn [\r\n\t\t\t<div className=\"solidClr solidBlue\"></div>,\r\n\t\t\t<div className=\"solidClr solidDarkBlue\"></div>,\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<h1>INKFARER</h1>\r\n\t\t\t\t\r\n\t\t\t\t<Nav\r\n\t\t\t\t\tclassName=\"justify-content-center\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<NavLink exact to=\"/\" className=\"nav-link\">Home</NavLink>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<NavLink to=\"/about\" className=\"nav-link\">About</NavLink>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t</Nav>\r\n\t\t\t</div>,\r\n\t\t\t<div className=\"wave wave1\">\r\n\t\t\t\t<div className=\"waveImg wave1img\"></div>\r\n\t\t\t</div>,\r\n\t\t\t<div className=\"wave wave2\">\r\n\t\t\t\t<div className=\"waveImg wave2img\"></div>\r\n\t\t\t</div>\r\n\t\t]\r\n\t}\r\n}","import React from 'react';\r\nimport * as projectElems from './projects.json';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Projects() {\r\n\tlet projects : any = [];\r\n\r\n\tfor (let i = 0; i < projectElems.projects.length; i++) {\r\n\t\tconst element = projectElems.projects[i];\r\n\t\tprojects.push(\r\n\t\t<Col key={element.id} md={6} lg={3} className=\"mb-4\">\r\n\t\t\t<div className=\"image-box\">\r\n\t\t\t\t<Link to={'/details/' + element.id}>\r\n\t\t\t\t\t<img className=\"image-box-image card-img-top\" src={'img/' + element.images[0]} alt={'Thumbnail for ' + element.name} />\r\n\t\t\t\t\t<p className=\"image-box-description\">{element.name}</p>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</Col>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t{projects}\r\n\t\t</Row>\r\n\t);\r\n}","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default function Err(props : {msg: String}) {\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col xs={12} md={{span: 8, offset: 2}}>\r\n\t\t\t\t<h2 className=\"font-weight-bold text-center\">{props.msg}</h2>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t)\r\n}","import React from 'react';\r\n\r\nexport default function getHeadElems(tabTitle: string, title: string, url: string, desc?: string, image?: string) {\r\n\treturn [\r\n\t\t<title>{tabTitle === '' ? 'Inkfarer' : `${tabTitle} - Inkfarer`}</title>,\r\n\t\t<meta name=\"title\" content={title} />,\r\n\t\t<meta name=\"description\" content={desc === undefined ? '' : desc} />,\r\n\r\n\t\t<meta property=\"og:url\" content={url} />,\r\n\t\t<meta property=\"og:title\" content={title} />,\r\n\t\t<meta property=\"og:description\" content={desc === undefined ? '' : desc} />,\r\n\t\t<meta property=\"og:image\" content={image === undefined ? '' : image} />,\r\n\r\n\t\t<meta property=\"twitter:card\" content=\"summary_large_image\" />,\r\n\t\t<meta property=\"twitter:url\" content={url} />,\r\n\t\t<meta property=\"twitter:title\" content={title} />,\r\n\t\t<meta property=\"twitter:description\" content={desc === undefined ? '' : desc} />,\r\n\t\t<meta property=\"twitter:image\" content={image === undefined ? '' : image} />\r\n\t];\r\n}","import React from 'react';\r\nimport {\r\n\tuseParams\r\n} from \"react-router-dom\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Helmet from 'react-helmet';\r\nimport * as projectElems from './projects.json';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Err from './err';\r\nimport getHeadElems from './getHeadElems';\r\n\r\nexport default function Project() {\r\n\tlet {projectId} = useParams();\r\n\tlet projectElem = projectElems.projects.filter(elem => elem.id === projectId)[0];\r\n\r\n\tif (projectElem === undefined) {\r\n\t\treturn <Err msg=\"Page not found!\" />\r\n\t}\r\n\r\n\tlet slides = [];\r\n\tfor (let i = 0; i < projectElem.images.length; i++) {\r\n\t\tconst element = projectElem.images[i];\r\n\t\tslides.push(\r\n\t\t\t<Carousel.Item>\r\n\t\t\t\t<img className=\"d-block w-100\" src={`/img/${element}`} alt={`Slide ${i+1} for ${projectElem.name}`} />\r\n\t\t\t</Carousel.Item>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Helmet>\r\n\t\t\t\t{getHeadElems(projectElem.name, 'Inkfarer\\'s website', window.location.href, projectElem.rawDescription, projectElem.images[0])}\r\n\t\t\t</Helmet>\r\n\t\t\t<Col xs={12} md={{span: 10, offset: 1}}>\r\n\t\t\t\t<Carousel>\r\n\t\t\t\t\t{slides}\r\n\t\t\t\t</Carousel>\r\n\t\t\t\t<div className=\"text-center font-weight-bold\">{projectElem.name}</div>\r\n\t\t\t\t<div className=\"text-center\" dangerouslySetInnerHTML={{__html: projectElem.description}}></div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Helmet from 'react-helmet';\r\nimport getHeadElems from './getHeadElems';\r\n\r\nexport default function About() {\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Helmet>\r\n\t\t\t\t{getHeadElems('About', 'About Inkfarer', window.location.href)}\r\n\t\t\t</Helmet>\r\n\t\t\t<Col xs={12} md={{span: 8, offset: 2}}>\r\n\t\t\t\t<div className=\"text-left\">\r\n\t\t\t\t\t<h2 className=\"font-weight-bold\">About me</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tI am Inkfarer (Formely known as randomoink).<br />\r\n\t\t\t\t\t\tI've been building stream overlays and running streams for various online communities since 2018.\r\n\t\t\t\t\t\tI additionally spend my free time learning Japanese, listening to music and playing games.<br />\r\n\t\t\t\t\t\tI'm currently studying software development.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<h2 className=\"font-weight-bold\">Social Media</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">Discord: </span>inkfarer#6942<br />\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">Twitter: </span><a href=\"https://twitter.com/inkfarer\">@inkfarer</a><br />\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">Twitch: </span><a href=\"https://www.twitch.tv/inkfarer\">inkfarer</a><br />\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">GitHub:  </span><a href=\"https://github.com/inkfarer\">inkfarer</a><br />\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">Email (checked infrequently): </span>inkfarer@inkfarer.com\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<h2 className=\"font-weight-bold\">Tools</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tMy stream overlays use <a href=\"https://nodecg.com/\">NodeCG</a> as an underlying framework and <a href=\"https://greensock.com/gsap/\">GSAP</a> for animation.<br />\r\n\t\t\t\t\t\tThey run on HTML, CSS and JavaScript.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React from 'react';\r\nimport Header from './header';\r\nimport Projects from './projects';\r\nimport {\r\n\tHashRouter,\r\n\tSwitch,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Project from './project';\r\nimport About from './about';\r\nimport Err from './err';\r\nimport Helmet from 'react-helmet';\r\nimport getHeadElems from './getHeadElems';\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn [\r\n\t\t\t<HashRouter basename=\"/\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Helmet>\r\n\t\t\t\t\t\t\t{getHeadElems(\"\", 'Inkfarer\\'s website', window.location.href)}\r\n\t\t\t\t\t\t</Helmet>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path=\"/about\">\r\n\t\t\t\t\t\t\t\t<About />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t\t<Projects />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/details/:projectId\">\r\n\t\t\t\t\t\t\t\t<Project />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t\t\t\t<Err msg=\"Page not found!\" />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Container>\r\n\t\t\t</HashRouter>\r\n\t\t]\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}